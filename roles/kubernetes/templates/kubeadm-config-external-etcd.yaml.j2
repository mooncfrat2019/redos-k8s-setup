apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ node_ip }}"
  bindPort: 6443
nodeRegistration:
  criSocket: "unix:///var/run/containerd/containerd.sock"
  taints: []
  kubeletExtraArgs:
    - name: "cgroup-driver"
      value: "{{ cgroup_driver }}"
    - name: "pod-infra-container-image"
      value: "{{ registry_url }}/pause:3.10"
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
kubernetesVersion: "v{{ kubernetes_version }}"
controlPlaneEndpoint: "{{ cluster_vip }}:6443"
clusterName: "{{ cluster_name | default('kubernetes') }}"
networking:
  serviceSubnet: "{{ service_cidr }}"
  podSubnet: "{{ pod_network_cidr }}"
  dnsDomain: "{{ cluster_domain }}"
apiServer:
  certSANs:
    - "{{ cluster_vip }}"
    - "{{ hostvars['master-node-1'].node_ip }}"
    - "{{ hostvars['master-node-2'].node_ip }}"
    - "{{ hostvars['master-node-3'].node_ip }}"
    - "{{ hostvars['master-node-1'].internal_ip }}"
    - "{{ hostvars['master-node-2'].internal_ip }}"
    - "{{ hostvars['master-node-3'].internal_ip }}"
    - "kubernetes"
    - "kubernetes.default"
    - "kubernetes.default.svc"
    - "kubernetes.default.svc.{{ cluster_domain }}"
    - "kubernetes.default.svc.k8s-ha.local"
    - "{{ cluster_domain }}"
    - "127.0.0.1"
    - "localhost"
    - "master-node-1"
    - "master-node-2"
    - "master-node-3"
{% for ip in master_ips.values() %}
    - "{{ ip }}"
{% endfor %}
{% for host in groups['masters'] %}
    - "{{ host }}"
{% endfor %}
etcd:
  external:
    endpoints:
      - https://{{ hostvars['master-node-1'].internal_ip }}:2379
      - https://{{ hostvars['master-node-2'].internal_ip }}:2379
      - https://{{ hostvars['master-node-3'].internal_ip }}:2379
    caFile: /etc/kubernetes/pki/etcd-ca.crt
    certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
    keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
imageRepository: "{{ registry_url }}"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: "{{ cgroup_driver }}"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
clusterDomain: "{{ cluster_domain }}"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "iptables"
clusterCIDR: "{{ pod_network_cidr }}"